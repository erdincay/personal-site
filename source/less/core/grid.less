
//  # GRID SYSTEM CLASS-FREE
//  # grid.less

   .grid( @colNumber, @baseGrid: @base-grid-columns, @gutter: @base-grid-gutter, @align: left, @offset: 0 ) {
  
      // Variables operatori
      @initColWidth: ( @colNumber * 100 ) / @baseGrid;
      @newOffset: ( @offset * 100 ) / @baseGrid;
      
      // Style for default grid parameters
      width: unit( @initColWidth, % );
      box-sizing: border-box;
      float: left;

      // Set left element with custom offset value
      & when ( @align = left ) and not ( @offset = 0 ) {
        width: unit( @initColWidth, % );
        float: left;
        margin-left: unit( @initColWidth, % );
      }

      & when ( @align = right ) and ( @offset = 0 ) {
        width: unit( @initColWidth, % );
        float: right;
      }

      // Set right element with custom offset value
      & when ( @align = right ) and not ( @offset = 0 ) { 
        width: unit( @initColWidth, % );
        float: right;
        margin-right: ~"@{newOffset}%";
      }

      // Set centered element grid and alignment
      & when ( @align = center ) {
        width: unit( @initColWidth, % );
        margin: 0 auto;
      }
     
      // Apply gutter when @use-gutters is true
      & when ( @use-gutters = true ) {
        .gutter-calculator( @gutter, @initColWidth );
      }
   }

   // Reset grid position
   .ungrid() {
   float: none;
   width: auto;
   margin: auto; }


// GUTTER CALCULATOR
// #############################################################################

   .gutter-calculator( @theGutter, @colWidth ) {

      // Apply inner padding when gutter is percentage
      & when ( ispercentage( @theGutter ) ){

         // Variables operators
         @newGutter: ( @theGutter * @colWidth ) / 100 ;

         width: unit( @colWidth, % );
         margin: @newGutter;
      }

      // Apply inner padding when gutter is pixel
      & when not ( ispercentage( @theGutter ) ){

         // Variables operators
         @newGutter: @theGutter * 2;

         width: ~"calc( @{colWidth}% - @{newGutter} )";
         margin: @theGutter;
      }
   }

